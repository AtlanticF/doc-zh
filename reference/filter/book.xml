<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: dff279a1fb1cefe17b594d2058741b308e420a36 Maintainer: mowangjuanzi Status: ready -->
<book xml:id="book.filter" xmlns="http://docbook.org/ns/docbook">
 <?phpdoc extension-membership="bundled" ?>
 <title>数据过滤器</title>
 <titleabbrev>过滤器</titleabbrev>

 <preface xml:id="intro.filter">
  &reftitle.intro;
  <para>
   该扩展通过验证或清理数据来过滤数据。当数据源包含像用户提供的输入数据等未知（或外部）数据时，这尤其有用。例如，这些数据可能来自 HTML 表单。
  </para>
  <para>
   有两种主要的过滤类型：<emphasis>验证（validation）</emphasis>和<emphasis>清理（sanitization）</emphasis>。
  </para>
  <para>
   <link linkend="filter.filters.validate">验证</link>用于验证或检查数据是否符合某些条件。例如，传递
   <constant>FILTER_VALIDATE_EMAIL</constant> 可以确定数据是否是有效的电子邮件地址，但不会更改数据本身。
  </para>
  <para>
   <link linkend="filter.filters.sanitize">清理</link>将清理数据，因此可能通过移除不需要的字符来改变数据。例如，使用
   <constant>FILTER_SANITIZE_EMAIL</constant> 会移除电子邮件地址中不适当的字符。也就是说，不会对数据进行验证。
  </para>
  <para>
   对于验证和清理，<emphasis>flag</emphasis>是可选的，可以根据需要调整行为。例如，在过滤 <acronym>URL</acronym> 时传递
   <constant>FILTER_FLAG_PATH_REQUIRED</constant> 将要求存在路径（如 <literal>http://example.org/foo</literal> 中的 <literal>/foo</literal>）。
  </para>
 </preface>

 &reference.filter.setup;
 &reference.filter.filters;
 &reference.filter.constants;
 &reference.filter.examples;
 &reference.filter.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

